<div class = "card-wrapper">
  <div class = "card">
    <!-- card left -->
    <div class = "product-imgs">
      <div class = "img-display">
        <div class = "img-showcase">
          <img src = "https://fadzrinmadu.github.io/hosted-assets/product-detail-page-design-with-image-slider-html-css-and-javascript/shoe_1.jpg" alt = "shoe image">
          <img src = "https://fadzrinmadu.github.io/hosted-assets/product-detail-page-design-with-image-slider-html-css-and-javascript/shoe_2.jpg" alt = "shoe image">
          <img src = "https://fadzrinmadu.github.io/hosted-assets/product-detail-page-design-with-image-slider-html-css-and-javascript/shoe_3.jpg" alt = "shoe image">
          <img src = "https://fadzrinmadu.github.io/hosted-assets/product-detail-page-design-with-image-slider-html-css-and-javascript/shoe_4.jpg" alt = "shoe image">
        </div>
      </div>
      <div class = "img-select">
        <div class = "img-item">
          <a href = "#" data-id = "1">
            <img src = "https://fadzrinmadu.github.io/hosted-assets/product-detail-page-design-with-image-slider-html-css-and-javascript/shoe_1.jpg" alt = "shoe image">
          </a>
        </div>
        <div class = "img-item">
          <a href = "#" data-id = "2">
            <img src = "https://fadzrinmadu.github.io/hosted-assets/product-detail-page-design-with-image-slider-html-css-and-javascript/shoe_2.jpg" alt = "shoe image">
          </a>
        </div>
        <div class = "img-item">
          <a href = "#" data-id = "3">
            <img src = "https://fadzrinmadu.github.io/hosted-assets/product-detail-page-design-with-image-slider-html-css-and-javascript/shoe_3.jpg" alt = "shoe image">
          </a>
        </div>
        <div class = "img-item">
          <a href = "#" data-id = "4">
            <img src = "https://fadzrinmadu.github.io/hosted-assets/product-detail-page-design-with-image-slider-html-css-and-javascript/shoe_4.jpg" alt = "shoe image">
          </a>
        </div>
      </div>
    </div>







    
    
@import url('https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700;800&display=swap');

*{
    box-sizing: border-box;
    padding: 0;
    margin: 0;
    font-family: 'Open Sans', sans-serif;
}
body{
    line-height: 1.5;
}
.card-wrapper{
    max-width: 1100px;
    margin: 0 auto;
}
img{
    width: 100%;
    display: block;
}
.img-display{
    overflow: hidden;
}
.img-showcase{
    display: flex;
    width: 100%;
    transition: all 0.5s ease;
}
.img-showcase img{
    min-width: 100%;
}
.img-select{
    display: flex;
}
.img-item{
    margin: 0.3rem;
}
.img-item:nth-child(1),
.img-item:nth-child(2),
.img-item:nth-child(3){
    margin-right: 0;
}
.img-item:hover{
    opacity: 0.8;
}
.product-content{
    padding: 2rem 1rem;
}
.product-title{
    font-size: 3rem;
    text-transform: capitalize;
    font-weight: 700;
    position: relative;
    color: #12263a;
    margin: 1rem 0;
}
.product-title::after{
    content: "";
    position: absolute;
    left: 0;
    bottom: 0;
    height: 4px;
    width: 80px;
    background: #12263a;
}
.product-link{
    text-decoration: none;
    text-transform: uppercase;
    font-weight: 400;
    font-size: 0.9rem;
    display: inline-block;
    margin-bottom: 0.5rem;
    background: #256eff;
    color: #fff;
    padding: 0 0.3rem;
    transition: all 0.5s ease;
}
.product-link:hover{
    opacity: 0.9;
}
.product-rating{
    color: #ffc107;
}
.product-rating span{
    font-weight: 600;
    color: #252525;
}
.product-price{
    margin: 1rem 0;
    font-size: 1rem;
    font-weight: 700;
}
.product-price span{
    font-weight: 400;
}
.last-price span{
    color: #f64749;
    text-decoration: line-through;
}
.new-price span{
    color: #256eff;
}
.product-detail h2{
    text-transform: capitalize;
    color: #12263a;
    padding-bottom: 0.6rem;
}
.product-detail p{
    font-size: 0.9rem;
    padding: 0.3rem;
    opacity: 0.8;
}
.product-detail ul{
    margin: 1rem 0;
    font-size: 0.9rem;
}
.product-detail ul li{
    margin: 0;
    list-style: none;
    background: url(https://fadzrinmadu.github.io/hosted-assets/product-detail-page-design-with-image-slider-html-css-and-javascript/checked.png) left center no-repeat;
    background-size: 18px;
    padding-left: 1.7rem;
    margin: 0.4rem 0;
    font-weight: 600;
    opacity: 0.9;
}
.product-detail ul li span{
    font-weight: 400;
}
.purchase-info{
    margin: 1.5rem 0;
}
.purchase-info input,
.purchase-info .btn{
    border: 1.5px solid #ddd;
    border-radius: 25px;
    text-align: center;
    padding: 0.45rem 0.8rem;
    outline: 0;
    margin-right: 0.2rem;
    margin-bottom: 1rem;
}
.purchase-info input{
    width: 60px;
}
.purchase-info .btn{
    cursor: pointer;
    color: #fff;
}
.purchase-info .btn:first-of-type{
    background: #256eff;
}
.purchase-info .btn:last-of-type{
    background: #f64749;
}
.purchase-info .btn:hover{
    opacity: 0.9;
}
.social-links{
    display: flex;
    align-items: center;
}
.social-links a{
    display: flex;
    align-items: center;
    justify-content: center;
    width: 32px;
    height: 32px;
    color: #000;
    border: 1px solid #000;
    margin: 0 0.2rem;
    border-radius: 50%;
    text-decoration: none;
    font-size: 0.8rem;
    transition: all 0.5s ease;
}
.social-links a:hover{
    background: #000;
    border-color: transparent;
    color: #fff;
}

@media screen and (min-width: 992px){
    .card{
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        grid-gap: 1.5rem;
    }
    .card-wrapper{
        height: 100vh;
        display: flex;
        justify-content: center;
        align-items: center;
    }
    .product-imgs{
        display: flex;
        flex-direction: column;
        justify-content: center;
    }
    .product-content{
        padding-top: 0;
    }
}







const imgs = document.querySelectorAll('.img-select a');
const imgBtns = [...imgs];
let imgId = 1;

imgBtns.forEach((imgItem) => {
    imgItem.addEventListener('click', (event) => {
        event.preventDefault();
        imgId = imgItem.dataset.id;
        slideImage();
    });
});

function slideImage(){
    const displayWidth = document.querySelector('.img-showcase img:first-child').clientWidth;

    document.querySelector('.img-showcase').style.transform = `translateX(${- (imgId - 1) * displayWidth}px)`;
}

window.addEventListener('resize', slideImage);






 <a href="/deletecategory/<%= product._id %>" class="btn btn-primary"




   onclick="return confirmDelete()">Delete</a>








    orders: [{
        product: {
            type: mongoose.Schema.Types.ObjectId,
            ref: 'Productcollection',
            required: true,
        },
        productName: String,
        quantity: {
            type: Number,
            required: true,
            default: 1
        },
        status: {
            type: String,
            default: 'Pending',
        },
        orderDate: {
            type: Date,
            required: true,
            default: Date.now
        },
    }]



status pending ejs


     <ul class="dropdown-menu" aria-labelledby="statusDropdown">
                                        <li><a class="dropdown-item" href="/updateOrderStatus/<%= users._id %>/<%= order._id %>/Order Confirmed" onclick="updateOrderStatus('<%= order._id %>', 'Order Confirmed')">Order Confirmed</a></li>
                                        <li><a class="dropdown-item" href="/updateOrderStatus/<%= users._id %>/<%= order._id %>/Shipped" onclick="updateOrderStatus('<%= order._id %>', 'Shipped')">Shipped</a></li>
                                        <li><a class="dropdown-item" href="/updateOrderStatus/<%= users._id %>/<%= order._id %>/Out For Delivery" onclick="updateOrderStatus('<%= order._id %>', 'Out For Delivery')">Out For Delivery</a></li>
                                        <li><a class="dropdown-item" href="/updateOrderStatus/<%= users._id %>/<%= order._id %>/Delivered" onclick="updateOrderStatus('<%= order._id %>', 'Delivered')">Delivered</a></li>
                                    </ul> 











                                    <!DOCTYPE html>
<html lang="en">

<head>
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Poppins:wght@100;300;500;900&display=swap" rel="stylesheet"> 
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Admin Control Panel</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
  <style>
    body {
      height: 100%;
      margin: 0;
      background-image: url('https://th.bing.com/th/id/OIP.JfSoCom_PMG2HWUDFwb28gHaEo?rs=1&pid=ImgDetMain');
      /* Replace with the actual path to your image */
      background-size: cover;
      background-position: center;
      background-repeat: no-repeat;
      font-family: 'Arial', sans-serif;
      /* Use Arial as a web-safe font, and fallback to sans-serif if not available */
    }

    .sidebar {
      height: 100%;
      width: 250px;
      position: fixed;
      left: 0;
      top: 0;
      padding-top: 20px;
      background-color: #333;
      overflow: auto;
    }

    .bg-grey {
      background-color: grey;
    }

    .sidebar a {
      display: block;
      color: white;
      padding: 16px;
      text-decoration: none;
    }

    .sidebar a:hover {
      background-color: #ddd;
      color: black;
    }

    .main-content {
      flex-grow: 1;
      padding: 20px;
      margin-left: 250px;
    }

    /* Responsive layout - when the screen is less than 700px wide, make the sidebar and main content stack on top of each other */
    @media screen and (max-width: 700px) {

      .sidebar,
      .main-content {
        width: 100%;
        height: auto;
        position: relative;
      }
    }
  </style>
</head>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.5.0/Chart.min.js"></script>

<body>



  <nav class="navbar navbar-expand-lg navbar-light bg-grey">
    <div class="container">
      <a class="navbar-brand" href="#">LIGHT CART</a>
      <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav"
        aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse justify-content-end" id="navbarNav">
        <ul class="navbar-nav">
          <li class="nav-item">
            <!-- <a class="nav-link" href="/cart"><i class="fas fa-shopping-cart"></i> My Cart</a> -->
          </li>
          <li class="nav-item">
            <!-- <a class="nav-link" href="/home"><i class="fas fa-user-circle"></i> Home</a> -->
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/admin/logout"><i class="fas fa-sign-out-alt"></i> Logout</a>
          </li>
        </ul>
      </div>
    </div>
  </nav>






  <nav class="sidebar" style="margin-top: 55px;">
    <a href="/dashboard">dashboard</a>
    <a href="/usermanagement">User Management</a>
    <a href="/productmanagement">Product Management</a>
    <a href="/couponmanagement">Coupon Management</a>
    <a href="/ordermanagement">Order management</a>
    <a href="/categorymanagement">Category Management</a>
    <a href="/admin/logout" class="border rounded py-1 px-3 nav-link d-flex align-items-center">
      <i class="fas fa-sign-out-alt m-1 me-md-2"></i>
      <p class="d-none d-md-block mb-0">Logout</p>
    </a>
  </nav>

  <div class="container">
    <div class="row">
      <div class="col-12 ms-5 px-5">
        <div style="margin-left: 200px; margin-top: 60px">
          <canvas id="myChart" style="width: 100%; max-width: 420px"></canvas>
        </div>
      </div>
    </div>
  </div>

  <input type="hidden" id="hiddeninput" data-xvalue="<%= JSON.stringify(xValues) %>" data-yvalue="<%= JSON.stringify(yValues) %>">

  <div class="container">
    <div class="row">
      <div class="col-12 ms-5 px-5">
        <div style="margin-left: 200px; margin-top: 60px">
          <canvas id="barchart" style="width: 100%; max-width: 420px"></canvas>
        </div>
      </div>
    </div>
  </div>
  <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js"
    integrity="sha384-IQsoLXl5PILFhosVNubq5LC7Qb9DXgDA9i+tQ8Zj3iwWAwPtgFTxbJ8NT4GN1R8p"
    crossorigin="anonymous"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.min.js"
    integrity="sha384-cVKIPhGWiC2Al4u+LWgxfKTRIcfu0JTxR+EQDz/bgldoEyl4H0zUF0QKbrJ0EcQF"
    crossorigin="anonymous"></script>

  <script>
   const hiddeninput = document.getElementById('hiddeninput');
    const xvalue = JSON.parse(hiddeninput.getAttribute('data-xvalue'));
    const yvalue = JSON.parse(hiddeninput.getAttribute('data-yvalue'));

    const barColors = ["red", "green", "blue", "orange", "brown", "yellow", "blue"];

    new Chart("myChart", {
        type: "bar",
        data: {
            labels: xvalue,
            datasets: [
                {
                    backgroundColor: barColors,
                    data: yvalue,
                },
            ],
        },
        options: {
            legend: { display: false },
            title: {
                display: true,
                text: "World Wine Production 2018",
            },
        },
    }); 
  </script>

  <script>

    const chart = document.getElementById("barchart");
    const data = {
      labels: xvalue,
      datasets: [
        {
          label: "My First Dataset",  
          data: yvalue,
          backgroundColor: [
            "rgba(255, 99, 132, 0.2)",
            "rgba(255, 159, 64, 0.2)",
            "rgba(255, 205, 86, 0.2)",
            "rgba(75, 192, 192, 0.2)",
            "rgba(54, 162, 235, 0.2)",
            "rgba(153, 102, 255, 0.2)",
            "rgba(201, 203, 207, 0.2)",
            "rgba(255, 99, 132, 0.2)",
            "rgba(255, 159, 64, 0.2)",
            "rgba(255, 205, 86, 0.2)",
            "rgba(75, 192, 192, 0.2)",
            "rgba(54, 162, 235, 0.2)",
          ],
          borderColor: [
            "rgb(201,52,244)",
            "rgb(255, 159, 64)",
            "rgb(255, 205, 86)",
            "rgb(75, 192, 192)",
            "rgb(54, 162, 235)",
            "rgb(153, 102, 255)",
            "rgb(201, 203, 207)",
            "rgb(201,52,244)",
            "rgb(255, 159, 64)",
            "rgb(255, 205, 86)",
            "rgb(75, 192, 192)",
            "rgb(54, 162, 235)",
          ],
          borderWidth: 1,
          borderRadius: 20, // Set the border radius to control roundness
        },
      ],
    };

    const config = {
      type: "bar",
      data: data,
      options: {
        scales: {
          y: {
            beginAtZero: true,
          },
        },
      },
    };

    new Chart(chart, config);
  </script>


</body>

</html>
















<!DOCTYPE html>
<html lang="en">

<head>
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Poppins:wght@100;300;500;900&display=swap" rel="stylesheet"> 
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Admin Control Panel</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
  <style>
    body {
      height: 100%;
      margin: 0;
      background-image: url('https://th.bing.com/th/id/OIP.JfSoCom_PMG2HWUDFwb28gHaEo?rs=1&pid=ImgDetMain');
      /* Replace with the actual path to your image */
      background-size: cover;
      background-position: center;
      background-repeat: no-repeat;
      font-family: 'Arial', sans-serif;
      /* Use Arial as a web-safe font, and fallback to sans-serif if not available */
    }

    .sidebar {
      height: 100%;
      width: 250px;
      position: fixed;
      left: 0;
      top: 0;
      padding-top: 20px;
      background-color: #333;
      overflow: auto;
    }

    .bg-grey {
      background-color: grey;
    }

    .sidebar a {
      display: block;
      color: white;
      padding: 16px;
      text-decoration: none;
    }

    .sidebar a:hover {
      background-color: #ddd;
      color: black;
    }

    .main-content {
      flex-grow: 1;
      padding: 20px;
      margin-left: 250px;
    }

    /* Responsive layout - when the screen is less than 700px wide, make the sidebar and main content stack on top of each other */
    @media screen and (max-width: 700px) {

      .sidebar,
      .main-content {
        width: 100%;
        height: auto;
        position: relative;
      }
    }
  </style>
</head>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.5.0/Chart.min.js"></script>

<body>



  <nav class="navbar navbar-expand-lg navbar-light bg-grey">
    <div class="container">
      <a class="navbar-brand" href="#">LIGHT CART</a>
      <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav"
        aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse justify-content-end" id="navbarNav">
        <ul class="navbar-nav">
          <li class="nav-item">
            <!-- <a class="nav-link" href="/cart"><i class="fas fa-shopping-cart"></i> My Cart</a> -->
          </li>
          <li class="nav-item">
            <!-- <a class="nav-link" href="/home"><i class="fas fa-user-circle"></i> Home</a> -->
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/admin/logout"><i class="fas fa-sign-out-alt"></i> Logout</a>
          </li>
        </ul>
      </div>
    </div>
  </nav>






  <nav class="sidebar" style="margin-top: 55px;">
    <a href="/dashboard">dashboard</a>
    <a href="/usermanagement">User Management</a>
    <a href="/productmanagement">Product Management</a>
    <a href="/couponmanagement">Coupon Management</a>
    <a href="/ordermanagement">Order management</a>
    <a href="/categorymanagement">Category Management</a>
    <a href="/admin/logout" class="border rounded py-1 px-3 nav-link d-flex align-items-center">
      <i class="fas fa-sign-out-alt m-1 me-md-2"></i>
      <p class="d-none d-md-block mb-0">Logout</p>
    </a>
  </nav>

  <div class="container">
    <div class="row">
      <div class="col-12 ms-5 px-5">
        <div style="margin-left: 200px; margin-top: 60px">
          <canvas id="myChart" style="width: 100%; max-width: 420px"></canvas>
        </div>
      </div>
    </div>
  </div>

  <input type="hidden" id="hiddeninput" data-xvalue="<%= JSON.stringify(xValues) %>" data-yvalue="<%= JSON.stringify(yValues) %>">

  <div class="container">
    <div class="row">
      <div class="col-12 ms-5 px-5">
        <div style="margin-left: 200px; margin-top: 60px">
          <canvas id="barchart" style="width: 100%; max-width: 420px"></canvas>
        </div>
      </div>
    </div>
  </div>
  <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js"
    integrity="sha384-IQsoLXl5PILFhosVNubq5LC7Qb9DXgDA9i+tQ8Zj3iwWAwPtgFTxbJ8NT4GN1R8p"
    crossorigin="anonymous"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.min.js"
    integrity="sha384-cVKIPhGWiC2Al4u+LWgxfKTRIcfu0JTxR+EQDz/bgldoEyl4H0zUF0QKbrJ0EcQF"
    crossorigin="anonymous"></script>

  <script>
   const hiddeninput = document.getElementById('hiddeninput');
    const xvalue = JSON.parse(hiddeninput.getAttribute('data-xvalue'));
    const yvalue = JSON.parse(hiddeninput.getAttribute('data-yvalue'));

    const barColors = ["red", "green", "blue", "orange", "brown", "yellow", "blue"];

    new Chart("myChart", {
        type: "bar",
        data: {
            labels: xvalue,
            datasets: [
                {
                    backgroundColor: barColors,
                    data: yvalue,
                },
            ],
        },
        options: {
            legend: { display: false },
            title: {
                display: true,
                text: "World Wine Production 2018",
            },
        },
    }); 
  </script>

  <script>

    const chart = document.getElementById("barchart");
    const data = {
      labels: xvalue,
      datasets: [
        {
          label: "My First Dataset",  
          data: yvalue,
          backgroundColor: [
            "rgba(255, 99, 132, 0.2)",
            "rgba(255, 159, 64, 0.2)",
            "rgba(255, 205, 86, 0.2)",
            "rgba(75, 192, 192, 0.2)",
            "rgba(54, 162, 235, 0.2)",
            "rgba(153, 102, 255, 0.2)",
            "rgba(201, 203, 207, 0.2)",
            "rgba(255, 99, 132, 0.2)",
            "rgba(255, 159, 64, 0.2)",
            "rgba(255, 205, 86, 0.2)",
            "rgba(75, 192, 192, 0.2)",
            "rgba(54, 162, 235, 0.2)",
          ],
          borderColor: [
            "rgb(201,52,244)",
            "rgb(255, 159, 64)",
            "rgb(255, 205, 86)",
            "rgb(75, 192, 192)",
            "rgb(54, 162, 235)",
            "rgb(153, 102, 255)",
            "rgb(201, 203, 207)",
            "rgb(201,52,244)",
            "rgb(255, 159, 64)",
            "rgb(255, 205, 86)",
            "rgb(75, 192, 192)",
            "rgb(54, 162, 235)",
          ],
          borderWidth: 1,
          borderRadius: 20, // Set the border radius to control roundness
        },
      ],
    };

    const config = {
      type: "bar",
      data: data,
      options: {
        scales: {
          y: {
            beginAtZero: true,
          },
        },
      },
    };

    new Chart(chart, config);
  </script>


</body>

</html>

                                    <a href="/removeProduct/<%=item.product%>"><button class="btn btn-danger">Remove</button></a>








                                    <!-- <script>
  // Your existing script content

  // Function to apply date filter
  function applyDateFilter() {
    var startDate = document.getElementById('startDate').value;
    var endDate = document.getElementById('endDate').value;

    // Validate if both dates are provided
    if (startDate && endDate) {
      // Perform filtering based on start and end dates
      // Update the chart using the selected date range
      fetch('/adminsideData', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          startDate: startDate,
          endDate: endDate
        })
      })
      .then((response) => {
        return response.json();
      })
      .then((data) => {
        console.log(data);
        salesChart(data, data.filter);
      });
    } else {
      // Alert user if dates are not provided
      alert("Please select both start and end dates.");
    }
  }

  // Initial load (you may want to call only one of these depending on your initial state)
  window.onload = function () {
  updateChart('MONTHLY');
  updateChart1('YEARLY');  // Fix the typo here
};

</script>


 " class="btn btn-secondary" data-bs-dismiss="modal">Close</button> -->
          <!-- <button type="button" class="btn btn-primary" onclick="applyYearlyFilter()">Apply</button>
        </div>
      </div>
    </div>
  </div>

  <script>
    function applyMonthlyFilter() {
      const selectedMonth = document.getElementById('monthlyMonth').value;
      // Perform filtering based on the selected month
      // Update or call the necessary function for monthly filtering
      console.log('Applying Monthly Filter for Month:', selectedMonth);
      // Add your logic here
    }

    function applyYearlyFilter() {
      const selectedYear = document.getElementById('yearlyYear').value;
      // Perform filtering based on the selected year
      // Update or call the necessary function for yearly filtering
      console.log('Applying Yearly Filter for Year:', selectedYear);
      // Add your logic here
    }
  </script>

  <script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.0/dist/chart.umd.min.js"></script>
  <script>
    let myChart;
    let myChart1;

    function updateChart(filter) {
      // Fetch new data based on the selected FILTER
      fetch('/adminsideData', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            filter: filter
          })
        })
        .then((response) => {
          return response.json()
        })
        .then((data) => {
          console.log(data);
          salesChart(data, data.filter);
        })
    }

    async function salesChart(data, filter) { //function for generating the chart
      if (myChart) {
        myChart.destroy();
      }
      myChart = new Chart(
        document.getElementById('sales'), {
          type: 'bar',
          scales: {
            y: {
              beginAtZero: true
            }
          },
          data: {
            labels: data.saleData.map(row => row.month ?? row.year),
            datasets: [{
              barPercentage: 1,
              barThickness: 90,
              label: `${filter} SALES`,
              data: data.saleData.map(row => row.count),
              backgroundColor: 0xfffff // Function to generate random colors
            }]
          }
        }
      );
    }

    function updateChart1(filter) {
      // Fetch new data based on the selected FILTER
      fetch('/adminsideData', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            filter: filter
          })
        })
        .then((response) => {
          return response.json()
        })
        .then((data) => {
          console.log(data);
          salesChart1(data, data.filter);
        })
    }

    async function salesChart1(data, filter) { //function for generating the chart
      if (myChart1) {
        myChart1.destroy();
      }
      myChart1 = new Chart(
        document.getElementById('year'), {
          type: 'bar',
          scales: {
            y: {
              beginAtZero: true
            }
          },
          data: {
            labels: data.saleData.map(row => row.month ?? row.year),
            datasets: [{
              barPercentage: 1,
              barThickness: 90,
              label: `${filter} SALES`,
              data: data.saleData.map(row => row.count),
              backgroundColor: 0xfffff
            }]
          }
        }
      );
    }

    // Initial chart load
  
  </script>

  <script src="https://cdn.jsdelivr.net/npm/chart.js/2.5.0/Chart.min.js"></script>

  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.min.js"></script> --> -->








<!DOCTYPE html>
<html lang="en">

<head>
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Poppins:wght@100;300;500;900&display=swap" rel="stylesheet"> 
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Document</title>
  <link rel="stylesheet" href="dist/output.css">
</head>

<body>

  <%-include('navbar')%>

    <!-- form -->
    <form action="/signup" method="post" id="form">
      <div class="min-h-screen bg-white flex justify-center items-center">

        <div class="py-12 px-12 bg-white rounded-2xl shadow-xl z-20 space-y-4">
          <div>
            <h1 class="text-3xl font-bold text-center mb-4 cursor-pointer">Create An Account</h1>
            <p class="w-80 text-center text-sm mb-8 font-semibold text-gray-700 tracking-wide cursor-pointer">Create an
              account to enjoy all the services without any ads for free!</p>
          </div>

          <% if(error) { %>
            <p class="error" style="color: red;">
              <%= error %>
            </p>
            <%} %>

              <div class="space-y-4">
                <input type="text" id="name" name="name" placeholder="Username"
                  class="block text-sm py-3 px-4 rounded-lg w-full border outline-none" required />
                <input type="text" id="mail" name="email" placeholder="Email Address"
                  class="block text-sm py-3 px-4 rounded-lg w-full border outline-none" />
                <input type="password" id="password" name="password" placeholder="Password"
                  class="block text-sm py-3 px-4 rounded-lg w-full border outline-none" />
                <input type="password" id="repassword" name="" placeholder="Confirm Password"
                  class="block text-sm py-3 px-4 rounded-lg w-full border outline-none" />
              </div>
              <div class="text-center mt-6">
                <button id="submit" class="py-3 w-64 text-xl font-extrabold text-slate-950 bg-gray-500 rounded-2xl"
                  type="submit">Create Account</button>
                <p class="mt-4 text-sm">Already Have An Account? <span class="underline cursor-pointer"><a
                      href="/login">Sign In</a></span>
                </p>
              </div>
        </div>
      </div>
    </form>
    <!-- form -->
</body>

<script>
  // Form validation logics
  const username = document.getElementById("name");
  const emailBx = document.getElementById("mail");
  const password = document.getElementById("password");
  const repass = document.getElementById("repassword");
  const submit = document.getElementById("submit");
  const error = document.querySelector(".error");
  let form1 = document.getElementById('form')


  //Form validation

  form1.addEventListener("submit", (e) => {

    // e.preventDefault();
    console.log('submit button is clicked')
    let n = username.value.trim();
    let email = emailBx.value;
    let pass = password.value;
    let confirmpass = repass.value;
    let message = [];

    // Name validation


    let validateName = (trimmed) => {
      // Check if the length is at least 3 characters and does not contain '*'
      if (trimmed.length >= 3 && !trimmed.includes('*')) {
        return true;
      }
      return false;
    };


    // Email validation:

    let validateEmail = (Email) => {

      var emailRegex = /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$/;
      return emailRegex.test(Email);

    };

    //Password Validation

    let validatePassword = (pass) => {
      const symbolRegex = /[!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]+/;
      const lowercaseRegex = /[a-z]+/;
      const uppercaseRegex = /[A-Z]+/;
      const numericRegex = /\d+/;


      const hasSymbol = symbolRegex.test(pass);
      const hasLowercase = lowercaseRegex.test(pass);
      const hasUppercase = uppercaseRegex.test(pass);
      const hasNumeric = numericRegex.test(pass);

      return hasSymbol && hasLowercase && hasUppercase && hasNumeric;
    };


    if (n.length === 0) message.push("Enter username");
    else if (!validateName(n)) message.push("Invalid name");
    else if (!validateEmail(email)) message.push("Invalid email");
    else if (pass.length === 0) message.push("Enter the password");
    else if (!validatePassword(pass))
      message.push(
        "Password must contain a symbol, uppercase letter, and a number"
      );
    else if (pass !== confirmpass) message.push("Passwords doesn't match");



    if (message.length > 0) {
      e.preventDefault();
      error.textContent = message.join("");
    } else {
      form1.submit()
      error.textContent = '';
    }
  });
</script>

</html>



 <!-- <div class="col-md-10">
                        <p class="text-muted mb-0 small">₹<%= calculateGrandTotal(orderItems) %></p>
                      </div> -->








                      const categoryCounts = await Order.aggregate([
      { $unwind: "$products" },
      {
        $lookup: {
          from: "products",
          localField: "products.productId",
          foreignField: "_id",
          as: "productDetails",
        },
      },
      { $unwind: "$productDetails" },
      { $group: { _id: "$productDetails.category", count: { $sum: 1 } } },
    ]);





     <% order.forEach(item=> { %>