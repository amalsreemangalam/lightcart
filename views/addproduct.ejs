<!DOCTYPE html>
<html>

<head>
    <style>
        .container {
            background: linear-gradient(to right, #ff9966, #ff5e62);
            padding: 20px;
        }

        .container form {
            width: 100%;
            max-width: 500px;
            margin: 0 auto;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.1);
            background-color: #f0f0f0;
            /* Add this line */
        }

        .container form label {
            display: block;
            margin-bottom: 10px;
        }

        .container form input,
        .container form select {
            width: 100%;
            padding: 10px;
            margin-bottom: 20px;
            border-radius: 5px;
            border: 1px solid #ccc;
        }

        .container form input:focus,
        .container form select:focus {
            border-color: #007BFF;
            box-shadow: 0 0 5px #007BFF;
        }

        .container form button {
            padding: 10px 20px;
            background-color: #007BFF;
            color: white;
            border: none;
            border-radius: 5px;
        }

        .container form button:hover {
            background-color: #0056b3;
        }
        .image-preview {
    max-width: 100%;
    height: auto;
    margin-bottom: 10px;

}
#outer-image-preview-container img {
  width: 400px;
  height: 400px;
  object-fit: cover;
}
#outer-image-preview-container img {
  width: 50%;
  height: 50%;
  object-fit: cover;
}


    </style>
</head>

<body>
    <div class="container">
        <h2 style="text-align: center ;background-color: wheat;">Add Product</h2>
        <form action="/addproduct" method="POST" enctype="multipart/form-data" onsubmit="return validateForm()">
            <label for="username">Productname</label>
            <input type="text" id="username" name="productname" required>

            <label for="price">Product Price</label>
            <input type="number" id="price" name="productprice" min="1" required>

            <label for="description">Productdescription</label>
            <input type="text" id="description" name="productdescription" required>

            <label for="stocks">Productstocks</label>
            <input type="number" id="stocks" name="productstocks" required>
            <span id="error" style="color: red;"></span>




            <label for="productStock"><i class="fas fa-cubes"></i> Offer Price</label>
<input type="text" name="OfferPrice" class="form-control" id="productStock" placeholder="Enter product offer Price">
<div id="errorStock" class="error-message"></div>

<label for="discount"><i class="fas fa-cubes"></i> Discount</label>
<input type="text" name="Discount" class="form-control" id="productStock" placeholder="Enter product Discount">
<div id="errorStock" class="error-message"></div>
            


            <label for="category">Product Category</label>
          
          
           
            <select id="category" name="productcategory" required>
                <% categorydata.forEach(element => { %>
          
            
                <option value="<%= element.categoryname %>" id="category"><%= element.categoryname %></option>
                <!-- <option value="category1">OUTDOOR LIGHT</option> 
                <option value="category2">WATERPROOF</option>
                <option value="category3">LED</option>
                <option value="category3">FANCY LIGHT</option> -->
                <% }) %>

             
            </select> 

            
            <label for="image">Productimage</label>
            <input type="file" id="image" name="image" multiple>
            <div class="image-preview-container" id="outer-image-preview-container">
             
             </div>

              <div>
              <label for="imgfile" class="mb-3">
                  <span>Select Images:</span>
                  <input type="file" id="imageInput" name="imgfile" multiple accept="image/jpeg , image/png" required>
                  <div id="imagePreview"></div>
                  <button id="cropButton" type="button">Crop</button>
              </label>
          </div> 


             
            
            <button type="submit">SAVE</button>
        </form>
    </div>
    <script>
  function validateForm() {
 var stocks = document.getElementById("stocks");
 if (isNaN(stocks.value) || stocks.value < 0) {
     alert("Stock must be a number greater than or equal to zero!");
     return false;
 }
 return true;
}



</script>
<!-- <script>
    var fileInput = document.getElementById('image');
var imagePreview = document.getElementById('outer-image-preview-container');

</script>
<script>
fileInput.addEventListener('change', function(e) {
  var files = e.target.files;
  imagePreview.innerHTML = ''; // Clear the div

  for (var i = 0; i < files.length; i++) {
      var file = files[i];
      var reader = new FileReader();

      reader.onload = function(e) {
          var img = document.createElement('img');
          img.src = e.target.result;
          imagePreview.appendChild(img);
      };

      reader.readAsDataURL(file);
  }
});

</script>
<script>
   reader.onload = function(e) {
  var img = new Image();
  img.onload = function() {
      var canvas = document.createElement('canvas');
      var ctx = canvas.getContext('2d');

      var maxSize = 400; // Maximum size of the image
      var width = img.width;
      var height = img.height;

      if (width > height) {
          if (width > maxSize) {
              height *= maxSize / width;
              width = maxSize;
          }
      } else {
          if (height > maxSize) {
              width *= maxSize / height;
              height = maxSize;
          }
      }

      canvas.width = width;
      canvas.height = height;
      ctx.drawImage(img, 0, 0, width, height);

      var dataUrl = canvas.toDataURL('image/jpeg');
      var croppedImg = document.createElement('img');
      croppedImg.src = dataUrl;
      imagePreview.appendChild(croppedImg);
  };

  img.src = e.target.result;
};


</script> -->
<script>
  let fileInput = document.getElementById('imageInput');
  let selectedFiles = [];
  let cropper;

  document.getElementById('imageInput').addEventListener('change', function () {
    const imagePreview = document.getElementById('imagePreview');

    Array.from(this.files).forEach((file) => {
      const image = new Image();
      const reader = new FileReader();

      reader.onload = (e) => {
        image.src = e.target.result;
        image.style.maxWidth = '100%';
        image.style.height = 'auto';

        // Append the image to the preview container
        imagePreview.appendChild(image);

        // Initialize Cropper.js on the image
        cropper = new Cropper(image, {
          aspectRatio: 1, // Adjust as needed
          crop: function (event) {
            // No need to store cropped data here
          },
        });
      };

      reader.readAsDataURL(file);
    });
  });

  // Add a click event listener to the "Save" button
  let saveButton = document.getElementById('cropButton');
  saveButton.textContent = 'Save';
  saveButton.onclick = function () {
    if (cropper) {
      // Get the cropped canvas
      let canvas = cropper.getCroppedCanvas();

      // Convert the canvas to a Blob
      canvas.toBlob(function (blob) {
        // Create a new blob URL for the cropped image
        let croppedImageUrl = URL.createObjectURL(blob);

        // Use the original file name or generate a dynamic name
        let fileName = fileInput.files[0].name;

        // Create a new File object with the cropped blob
        let croppedFile = new File([blob], fileName, {
          type: 'image/jpeg',
        });

        // Add the cropped file to the selected files array
        selectedFiles.push(croppedFile);

        // Create a new FormData object and append the Blob
        let formData = new FormData();
        formData.append('croppedImage_1', croppedFile);

        // You can now use the formData for further processing (e.g., send it to the server)

        // Optionally, clear the file input
        fileInput.value = '';

        // Optionally, do something with the selectedFiles array
        console.log(selectedFiles);
      }, 'image/jpeg');
    }
  };
</script>


</body>

</html>